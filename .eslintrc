{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
//  "ignorePatterns": ["**/*"],
  "plugins": [
    "module-resolver",
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:prettier/recommended" // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
  ],
  "rules": {
//    "module-resolver/use-alias": 2, // TODO - when enabling this rule to detect relative imports instead of @lib/... imports the linting throws an exception
    "import/no-unresolved": [2, {"commonjs": true, "amd": true}],
    "import/prefer-default-export": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-parameter-properties": "off"
  },
  "overrides": [
    {
      "files": ["*.tsx"],
      "rules": {
        "@typescript-eslint/no-unused-vars": "off"
      }
    }
  ],
  "settings": {
    "import/resolver": {
      "alias": {
        "map": [
          ["@lib", "./src/lib"],
          ["@api", "./src/api"]
        ],
        "extensions": [
          ".ts",
          ".js"
        ]
      }
    }
  }
}
